version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:12.13-browsers

  working_directory: ~/project

orbs:
  aws-s3: circleci/aws-s3@1.0.11

jobs:
  install_dependencies:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - src
            - e2e
            - angular.json
            - tsconfig.json
            - tslint.json
            - package.json
            - .prettierrc
            - .prettierignore

  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/project

      - run: npm run lint

  prettier:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/project

      - run: npm run prettier:check

  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/project

      - run: npm test

  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/project

      - run: npm run build:prod

      - persist_to_workspace:
          root: .
          paths: ./dist

  deploy:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/project

      - aws-s3/sync:
          from: dist/todo-list-tdd
          to: $AWS_S3_BUCKET
          arguments: |
            --cache-control "max-age=86400"
          overwrite: true

workflows:
  version: 2

  build_lint_test_and_deploy:
    jobs:
      - install_dependencies

      - lint:
          requires:
            - install_dependencies

      - test:
          requires:
            - install_dependencies

      - prettier:
          requires:
            - install_dependencies

      - build:
          requires:
            - lint
            - test
            - prettier

      - deploy:
          requires:
            - build

          filters:
            branches:
              only:
                - master
